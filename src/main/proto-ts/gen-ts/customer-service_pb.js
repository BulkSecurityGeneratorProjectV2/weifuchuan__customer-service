/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.com.fuchuan.customerservice.common.AccountBaseInfo', null, global);
goog.exportSymbol('proto.com.fuchuan.customerservice.common.AccountBaseInfoReply', null, global);
goog.exportSymbol('proto.com.fuchuan.customerservice.common.AccountBaseInfoReq', null, global);
goog.exportSymbol('proto.com.fuchuan.customerservice.common.Code', null, global);
goog.exportSymbol('proto.com.fuchuan.customerservice.common.Command', null, global);
goog.exportSymbol('proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply', null, global);
goog.exportSymbol('proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq', null, global);
goog.exportSymbol('proto.com.fuchuan.customerservice.common.Role', null, global);
goog.exportSymbol('proto.com.fuchuan.customerservice.common.Waiters', null, global);
goog.exportSymbol('proto.com.fuchuan.customerservice.common.WaitersReq', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.fuchuan.customerservice.common.AccountBaseInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.fuchuan.customerservice.common.AccountBaseInfo.displayName = 'proto.com.fuchuan.customerservice.common.AccountBaseInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.fuchuan.customerservice.common.AccountBaseInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.fuchuan.customerservice.common.AccountBaseInfoReq.displayName = 'proto.com.fuchuan.customerservice.common.AccountBaseInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.fuchuan.customerservice.common.AccountBaseInfoReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.displayName = 'proto.com.fuchuan.customerservice.common.AccountBaseInfoReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq.repeatedFields_, null);
};
goog.inherits(proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq.displayName = 'proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply.repeatedFields_, null);
};
goog.inherits(proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply.displayName = 'proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.fuchuan.customerservice.common.Waiters = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.fuchuan.customerservice.common.Waiters.repeatedFields_, null);
};
goog.inherits(proto.com.fuchuan.customerservice.common.Waiters, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.fuchuan.customerservice.common.Waiters.displayName = 'proto.com.fuchuan.customerservice.common.Waiters';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.fuchuan.customerservice.common.WaitersReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.fuchuan.customerservice.common.WaitersReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.fuchuan.customerservice.common.WaitersReq.displayName = 'proto.com.fuchuan.customerservice.common.WaitersReq';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.com.fuchuan.customerservice.common.AccountBaseInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.fuchuan.customerservice.common.AccountBaseInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfo.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nickname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    avatar: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.fuchuan.customerservice.common.AccountBaseInfo}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.fuchuan.customerservice.common.AccountBaseInfo;
  return proto.com.fuchuan.customerservice.common.AccountBaseInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.fuchuan.customerservice.common.AccountBaseInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.fuchuan.customerservice.common.AccountBaseInfo}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNickname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatar(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.fuchuan.customerservice.common.AccountBaseInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.fuchuan.customerservice.common.AccountBaseInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNickname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAvatar();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.fuchuan.customerservice.common.AccountBaseInfo.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string nickName = 3;
 * @return {string}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfo.prototype.getNickname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.fuchuan.customerservice.common.AccountBaseInfo.prototype.setNickname = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string avatar = 4;
 * @return {string}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfo.prototype.getAvatar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.fuchuan.customerservice.common.AccountBaseInfo.prototype.setAvatar = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.com.fuchuan.customerservice.common.AccountBaseInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.fuchuan.customerservice.common.AccountBaseInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReq.toObject = function(includeInstance, msg) {
  var obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.fuchuan.customerservice.common.AccountBaseInfoReq}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.fuchuan.customerservice.common.AccountBaseInfoReq;
  return proto.com.fuchuan.customerservice.common.AccountBaseInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.fuchuan.customerservice.common.AccountBaseInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.fuchuan.customerservice.common.AccountBaseInfoReq}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.fuchuan.customerservice.common.AccountBaseInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.fuchuan.customerservice.common.AccountBaseInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReq.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReq.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.prototype.toObject = function(opt_includeInstance) {
  return proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.fuchuan.customerservice.common.AccountBaseInfoReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.toObject = function(includeInstance, msg) {
  var obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    account: (f = msg.getAccount()) && proto.com.fuchuan.customerservice.common.AccountBaseInfo.toObject(includeInstance, f),
    role: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.fuchuan.customerservice.common.AccountBaseInfoReply}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.fuchuan.customerservice.common.AccountBaseInfoReply;
  return proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.fuchuan.customerservice.common.AccountBaseInfoReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.fuchuan.customerservice.common.AccountBaseInfoReply}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.fuchuan.customerservice.common.Code} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = new proto.com.fuchuan.customerservice.common.AccountBaseInfo;
      reader.readMessage(value,proto.com.fuchuan.customerservice.common.AccountBaseInfo.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 3:
      var value = /** @type {!proto.com.fuchuan.customerservice.common.Role} */ (reader.readEnum());
      msg.setRole(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.fuchuan.customerservice.common.AccountBaseInfoReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.fuchuan.customerservice.common.AccountBaseInfo.serializeBinaryToWriter
    );
  }
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional Code code = 1;
 * @return {!proto.com.fuchuan.customerservice.common.Code}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.prototype.getCode = function() {
  return /** @type {!proto.com.fuchuan.customerservice.common.Code} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.com.fuchuan.customerservice.common.Code} value */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.prototype.setCode = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional AccountBaseInfo account = 2;
 * @return {?proto.com.fuchuan.customerservice.common.AccountBaseInfo}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.prototype.getAccount = function() {
  return /** @type{?proto.com.fuchuan.customerservice.common.AccountBaseInfo} */ (
    jspb.Message.getWrapperField(this, proto.com.fuchuan.customerservice.common.AccountBaseInfo, 2));
};


/** @param {?proto.com.fuchuan.customerservice.common.AccountBaseInfo|undefined} value */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.prototype.setAccount = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.prototype.clearAccount = function() {
  this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Role role = 3;
 * @return {!proto.com.fuchuan.customerservice.common.Role}
 */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.prototype.getRole = function() {
  return /** @type {!proto.com.fuchuan.customerservice.common.Role} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.com.fuchuan.customerservice.common.Role} value */
proto.com.fuchuan.customerservice.common.AccountBaseInfoReply.prototype.setRole = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq.toObject = function(includeInstance, msg) {
  var obj = {
    idList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq}
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq;
  return proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq}
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string id = 1;
 * @return {!Array<string>}
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq.prototype.getIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq.prototype.setIdList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq.prototype.addId = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReq.prototype.clearIdList = function() {
  this.setIdList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply.prototype.toObject = function(opt_includeInstance) {
  return proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply.toObject = function(includeInstance, msg) {
  var obj = {
    accountList: jspb.Message.toObjectList(msg.getAccountList(),
    proto.com.fuchuan.customerservice.common.AccountBaseInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply}
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply;
  return proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply}
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.fuchuan.customerservice.common.AccountBaseInfo;
      reader.readMessage(value,proto.com.fuchuan.customerservice.common.AccountBaseInfo.deserializeBinaryFromReader);
      msg.addAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.fuchuan.customerservice.common.AccountBaseInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AccountBaseInfo account = 1;
 * @return {!Array<!proto.com.fuchuan.customerservice.common.AccountBaseInfo>}
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply.prototype.getAccountList = function() {
  return /** @type{!Array<!proto.com.fuchuan.customerservice.common.AccountBaseInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.fuchuan.customerservice.common.AccountBaseInfo, 1));
};


/** @param {!Array<!proto.com.fuchuan.customerservice.common.AccountBaseInfo>} value */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply.prototype.setAccountList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.fuchuan.customerservice.common.AccountBaseInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.fuchuan.customerservice.common.AccountBaseInfo}
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply.prototype.addAccount = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.fuchuan.customerservice.common.AccountBaseInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.com.fuchuan.customerservice.common.FetchAccountListBaseInfoReply.prototype.clearAccountList = function() {
  this.setAccountList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.fuchuan.customerservice.common.Waiters.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.fuchuan.customerservice.common.Waiters.prototype.toObject = function(opt_includeInstance) {
  return proto.com.fuchuan.customerservice.common.Waiters.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.fuchuan.customerservice.common.Waiters} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.fuchuan.customerservice.common.Waiters.toObject = function(includeInstance, msg) {
  var obj = {
    accountList: jspb.Message.toObjectList(msg.getAccountList(),
    proto.com.fuchuan.customerservice.common.AccountBaseInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.fuchuan.customerservice.common.Waiters}
 */
proto.com.fuchuan.customerservice.common.Waiters.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.fuchuan.customerservice.common.Waiters;
  return proto.com.fuchuan.customerservice.common.Waiters.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.fuchuan.customerservice.common.Waiters} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.fuchuan.customerservice.common.Waiters}
 */
proto.com.fuchuan.customerservice.common.Waiters.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.fuchuan.customerservice.common.AccountBaseInfo;
      reader.readMessage(value,proto.com.fuchuan.customerservice.common.AccountBaseInfo.deserializeBinaryFromReader);
      msg.addAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.fuchuan.customerservice.common.Waiters.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.fuchuan.customerservice.common.Waiters.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.fuchuan.customerservice.common.Waiters} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.fuchuan.customerservice.common.Waiters.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.fuchuan.customerservice.common.AccountBaseInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AccountBaseInfo account = 1;
 * @return {!Array<!proto.com.fuchuan.customerservice.common.AccountBaseInfo>}
 */
proto.com.fuchuan.customerservice.common.Waiters.prototype.getAccountList = function() {
  return /** @type{!Array<!proto.com.fuchuan.customerservice.common.AccountBaseInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.fuchuan.customerservice.common.AccountBaseInfo, 1));
};


/** @param {!Array<!proto.com.fuchuan.customerservice.common.AccountBaseInfo>} value */
proto.com.fuchuan.customerservice.common.Waiters.prototype.setAccountList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.fuchuan.customerservice.common.AccountBaseInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.fuchuan.customerservice.common.AccountBaseInfo}
 */
proto.com.fuchuan.customerservice.common.Waiters.prototype.addAccount = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.fuchuan.customerservice.common.AccountBaseInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.com.fuchuan.customerservice.common.Waiters.prototype.clearAccountList = function() {
  this.setAccountList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.fuchuan.customerservice.common.WaitersReq.prototype.toObject = function(opt_includeInstance) {
  return proto.com.fuchuan.customerservice.common.WaitersReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.fuchuan.customerservice.common.WaitersReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.fuchuan.customerservice.common.WaitersReq.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.fuchuan.customerservice.common.WaitersReq}
 */
proto.com.fuchuan.customerservice.common.WaitersReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.fuchuan.customerservice.common.WaitersReq;
  return proto.com.fuchuan.customerservice.common.WaitersReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.fuchuan.customerservice.common.WaitersReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.fuchuan.customerservice.common.WaitersReq}
 */
proto.com.fuchuan.customerservice.common.WaitersReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.fuchuan.customerservice.common.WaitersReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.fuchuan.customerservice.common.WaitersReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.fuchuan.customerservice.common.WaitersReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.fuchuan.customerservice.common.WaitersReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.com.fuchuan.customerservice.common.Command = {
  COMMAND_UNKNOW: 0,
  COMMAND_HANDSHAKE_REQ: 1,
  COMMAND_HANDSHAKE_RESP: 2,
  COMMAND_AUTH_REQ: 3,
  COMMAND_AUTH_RESP: 4,
  COMMAND_JOIN_GROUP_REQ: 5,
  COMMAND_JOIN_GROUP_RESP: 6,
  COMMAND_JOIN_GROUP_NOTIFY_RESP: 7,
  COMMAND_EXIT_GROUP_NOTIFY_RESP: 8,
  COMMAND_CHAT_REQ: 9,
  COMMAND_CHAT_RESP: 10,
  COMMAND_START_SHOW_REQ: 11,
  COMMAND_START_SHOW_RESP: 12,
  COMMAND_END_SHOW_REQ: 13,
  COMMAND_END_SHOW_NOTIFY_RESP: 14,
  COMMAND_HEARTBEAT_REQ: 15,
  COMMAND_HEARTBEAT_RESP: 16,
  COMMAND_CLOSE_REQ: 17,
  COMMAND_CLIENT_PAGE_REQ: 18,
  COMMAND_CLIENT_PAGE_RESP: 19,
  COMMAND_LOGIN_REQ: 20,
  COMMAND_LOGIN_RESP: 21,
  COMMAND_CANCEL_MSG_REQ: 22,
  COMMAND_CANCEL_MSG_RESP: 23,
  COMMAND_CALL_REQ: 24,
  COMMAND_CALL_RESP: 25,
  COMMAND_REMIND_PUSH: 26,
  COMMAND_ONLINE_PUSH: 28,
  COMMAND_OFFLINE_PUSH: 29,
  COMMAND_CLEAR_REMIND_REQ: 27,
  COMMAND_ONLINE_NOTIFY_SUBSCRIBE_REQ: 30,
  COMMAND_TEST_FILE_REQ: 31
};

/**
 * @enum {number}
 */
proto.com.fuchuan.customerservice.common.Code = {
  OK: 0,
  FAIL: -1
};

/**
 * @enum {number}
 */
proto.com.fuchuan.customerservice.common.Role = {
  CUSTOMER: 0,
  WAITER: 1
};

goog.object.extend(exports, proto.com.fuchuan.customerservice.common);
