// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: customer-service.proto

package com.fuchuan.customerservice.common;

/**
 * Protobuf enum {@code com.fuchuan.customerservice.common.Command}
 */
public enum Command
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>COMMAND_UNKNOW = 0;</code>
   */
  COMMAND_UNKNOW(0),
  /**
   * <pre>
   * 握手请求，含http的websocket握手请求
   * </pre>
   *
   * <code>COMMAND_HANDSHAKE_REQ = 1;</code>
   */
  COMMAND_HANDSHAKE_REQ(1),
  /**
   * <pre>
   * 握手响应，含http的websocket握手响应
   * </pre>
   *
   * <code>COMMAND_HANDSHAKE_RESP = 2;</code>
   */
  COMMAND_HANDSHAKE_RESP(2),
  /**
   * <pre>
   * 聊天请求
   * </pre>
   *
   * <code>COMMAND_CHAT_REQ = 9;</code>
   */
  COMMAND_CHAT_REQ(9),
  /**
   * <pre>
   * 心跳请求
   * </pre>
   *
   * <code>COMMAND_HEARTBEAT_REQ = 15;</code>
   */
  COMMAND_HEARTBEAT_REQ(15),
  /**
   * <pre>
   * 心跳响应
   * </pre>
   *
   * <code>COMMAND_HEARTBEAT_RESP = 16;</code>
   */
  COMMAND_HEARTBEAT_RESP(16),
  /**
   * <pre>
   * 有响应的请求
   * </pre>
   *
   * <code>COMMAND_CALL_REQ = 24;</code>
   */
  COMMAND_CALL_REQ(24),
  /**
   * <pre>
   * 有响应的请求的响应
   * </pre>
   *
   * <code>COMMAND_CALL_RESP = 25;</code>
   */
  COMMAND_CALL_RESP(25),
  /**
   * <pre>
   * 提醒 推送
   * </pre>
   *
   * <code>COMMAND_REMIND_PUSH = 26;</code>
   */
  COMMAND_REMIND_PUSH(26),
  /**
   * <pre>
   * 上线 推送
   * </pre>
   *
   * <code>COMMAND_ONLINE_PUSH = 28;</code>
   */
  COMMAND_ONLINE_PUSH(28),
  /**
   * <pre>
   * 离线 推送
   * </pre>
   *
   * <code>COMMAND_OFFLINE_PUSH = 29;</code>
   */
  COMMAND_OFFLINE_PUSH(29),
  /**
   * <pre>
   * 清除某room的remind
   * </pre>
   *
   * <code>COMMAND_CLEAR_REMIND_REQ = 27;</code>
   */
  COMMAND_CLEAR_REMIND_REQ(27),
  /**
   * <pre>
   * 订阅 上线通知
   * </pre>
   *
   * <code>COMMAND_ONLINE_NOTIFY_SUBSCRIBE_REQ = 30;</code>
   */
  COMMAND_ONLINE_NOTIFY_SUBSCRIBE_REQ(30),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>COMMAND_UNKNOW = 0;</code>
   */
  public static final int COMMAND_UNKNOW_VALUE = 0;
  /**
   * <pre>
   * 握手请求，含http的websocket握手请求
   * </pre>
   *
   * <code>COMMAND_HANDSHAKE_REQ = 1;</code>
   */
  public static final int COMMAND_HANDSHAKE_REQ_VALUE = 1;
  /**
   * <pre>
   * 握手响应，含http的websocket握手响应
   * </pre>
   *
   * <code>COMMAND_HANDSHAKE_RESP = 2;</code>
   */
  public static final int COMMAND_HANDSHAKE_RESP_VALUE = 2;
  /**
   * <pre>
   * 聊天请求
   * </pre>
   *
   * <code>COMMAND_CHAT_REQ = 9;</code>
   */
  public static final int COMMAND_CHAT_REQ_VALUE = 9;
  /**
   * <pre>
   * 心跳请求
   * </pre>
   *
   * <code>COMMAND_HEARTBEAT_REQ = 15;</code>
   */
  public static final int COMMAND_HEARTBEAT_REQ_VALUE = 15;
  /**
   * <pre>
   * 心跳响应
   * </pre>
   *
   * <code>COMMAND_HEARTBEAT_RESP = 16;</code>
   */
  public static final int COMMAND_HEARTBEAT_RESP_VALUE = 16;
  /**
   * <pre>
   * 有响应的请求
   * </pre>
   *
   * <code>COMMAND_CALL_REQ = 24;</code>
   */
  public static final int COMMAND_CALL_REQ_VALUE = 24;
  /**
   * <pre>
   * 有响应的请求的响应
   * </pre>
   *
   * <code>COMMAND_CALL_RESP = 25;</code>
   */
  public static final int COMMAND_CALL_RESP_VALUE = 25;
  /**
   * <pre>
   * 提醒 推送
   * </pre>
   *
   * <code>COMMAND_REMIND_PUSH = 26;</code>
   */
  public static final int COMMAND_REMIND_PUSH_VALUE = 26;
  /**
   * <pre>
   * 上线 推送
   * </pre>
   *
   * <code>COMMAND_ONLINE_PUSH = 28;</code>
   */
  public static final int COMMAND_ONLINE_PUSH_VALUE = 28;
  /**
   * <pre>
   * 离线 推送
   * </pre>
   *
   * <code>COMMAND_OFFLINE_PUSH = 29;</code>
   */
  public static final int COMMAND_OFFLINE_PUSH_VALUE = 29;
  /**
   * <pre>
   * 清除某room的remind
   * </pre>
   *
   * <code>COMMAND_CLEAR_REMIND_REQ = 27;</code>
   */
  public static final int COMMAND_CLEAR_REMIND_REQ_VALUE = 27;
  /**
   * <pre>
   * 订阅 上线通知
   * </pre>
   *
   * <code>COMMAND_ONLINE_NOTIFY_SUBSCRIBE_REQ = 30;</code>
   */
  public static final int COMMAND_ONLINE_NOTIFY_SUBSCRIBE_REQ_VALUE = 30;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Command valueOf(int value) {
    return forNumber(value);
  }

  public static Command forNumber(int value) {
    switch (value) {
      case 0: return COMMAND_UNKNOW;
      case 1: return COMMAND_HANDSHAKE_REQ;
      case 2: return COMMAND_HANDSHAKE_RESP;
      case 9: return COMMAND_CHAT_REQ;
      case 15: return COMMAND_HEARTBEAT_REQ;
      case 16: return COMMAND_HEARTBEAT_RESP;
      case 24: return COMMAND_CALL_REQ;
      case 25: return COMMAND_CALL_RESP;
      case 26: return COMMAND_REMIND_PUSH;
      case 28: return COMMAND_ONLINE_PUSH;
      case 29: return COMMAND_OFFLINE_PUSH;
      case 27: return COMMAND_CLEAR_REMIND_REQ;
      case 30: return COMMAND_ONLINE_NOTIFY_SUBSCRIBE_REQ;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Command>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Command> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Command>() {
          public Command findValueByNumber(int number) {
            return Command.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.fuchuan.customerservice.common.CustomerServiceGrpc.getDescriptor().getEnumTypes().get(0);
  }

  private static final Command[] VALUES = values();

  public static Command valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Command(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:com.fuchuan.customerservice.common.Command)
}

