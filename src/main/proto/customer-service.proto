syntax = "proto3";

// import "google/protobuf/any.proto";

option java_multiple_files = true;
option java_package = "com.fuchuan.customerservice.common";
option java_outer_classname = "CustomerServiceGrpc";
option objc_class_prefix = "CS";

package com.fuchuan.customerservice.common;

enum Command {
    COMMAND_UNKNOW = 0;
    COMMAND_HANDSHAKE_REQ = 1; // 握手请求，含http的websocket握手请求
    COMMAND_HANDSHAKE_RESP = 2; // 握手响应，含http的websocket握手响应
    COMMAND_AUTH_REQ = 3; // 鉴权请求
    COMMAND_AUTH_RESP = 4; //  鉴权响应
    COMMAND_JOIN_GROUP_REQ = 5; // 申请进入群组
    COMMAND_JOIN_GROUP_RESP = 6; // 申请进入群组响应
    COMMAND_JOIN_GROUP_NOTIFY_RESP = 7; // 进入群组通知
    COMMAND_EXIT_GROUP_NOTIFY_RESP = 8; // 退出群组通知
    COMMAND_CHAT_REQ = 9; // 聊天请求
    COMMAND_CHAT_RESP = 10; // 聊天响应

    COMMAND_START_SHOW_REQ = 11; // 开播请求
    COMMAND_START_SHOW_RESP = 12; // 开播响应
    COMMAND_END_SHOW_REQ = 13; // 停播请求
    COMMAND_END_SHOW_NOTIFY_RESP = 14; // 停播通知

    COMMAND_HEARTBEAT_REQ = 15; // 心跳请求
    COMMAND_HEARTBEAT_RESP = 16; // 心跳响应
    COMMAND_CLOSE_REQ = 17; // 关闭请求
    COMMAND_CLIENT_PAGE_REQ = 18; // 分页请求Client列表
    COMMAND_CLIENT_PAGE_RESP = 19; // 返回Client列表
    COMMAND_LOGIN_REQ = 20; // 登录请求
    COMMAND_LOGIN_RESP = 21; // 登录响应
    COMMAND_CANCEL_MSG_REQ = 22; // 发出撤消消息指令(管理员可以撤消所有人的消息，自己可以撤消自己的消息)
    COMMAND_CANCEL_MSG_RESP = 23; // 收到撤消消息指令

    COMMAND_CALL_REQ = 24; // 有响应的请求
    COMMAND_CALL_RESP = 25; // 有响应的请求的响应

    COMMAND_REMIND_PUSH = 26; // 提醒 推送

    COMMAND_ONLINE_PUSH = 28; // 上线 推送
    COMMAND_OFFLINE_PUSH = 29; // 离线 推送

    COMMAND_CLEAR_REMIND_REQ = 27; // 清除某room的remind

    COMMAND_ONLINE_NOTIFY_SUBSCRIBE_REQ=30; // 订阅 上线通知
}

enum Code {
    OK = 0;
    FAIL = -1;
}

enum Role {
    CUSTOMER = 0; // 客户
    WAITER = 1; // 客服
}

message AccountBaseInfo {
    string id = 2;
    string nickName = 3;
    string avatar = 4;
}

message AccountBaseInfoReq {
    string id = 1;
}

message AccountBaseInfoReply {
    Code code = 1;
    AccountBaseInfo account = 2;
    Role role = 3;
}

message FetchAccountListBaseInfoReq {
    repeated string id = 1;
}

message FetchAccountListBaseInfoReply {
    repeated AccountBaseInfo account = 1;
}

message Waiters {
    repeated AccountBaseInfo account = 1;
}

message WaitersReq {
}

service AccountService {
    rpc FetchBaseInfo (AccountBaseInfoReq) returns (AccountBaseInfoReply);
    rpc FetchAccountListBaseInfo (FetchAccountListBaseInfoReq) returns (FetchAccountListBaseInfoReply);
    rpc FetchWaiters (WaitersReq) returns (Waiters);
}
